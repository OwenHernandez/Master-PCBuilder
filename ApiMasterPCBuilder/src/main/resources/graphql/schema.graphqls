type Query {
    # Seller
    sellers: [Seller]!
    seller(id: Int!): Seller!

    # Component
    components: [Component]!
    component(id: Int!): Component!
}

type Mutation {
    # Seller
    saveSeller(seller: SellerDTO!): Seller!
    updateSeller(id: Int!, seller: SellerDTO!): Boolean!
    deleteSeller(id: Int!): Boolean!

    # Component
    saveComponent(component: ComponentDTO!): Component!
    updateComponent(id: Int!, component: ComponentDTO!): Boolean!
    deleteComponent(id: Int!): Boolean!
}

# Seller
type Seller {
    id: Int
    name: String
    image: String
}

input SellerDTO {
    name: String
    image: String
}

# PriceHistory
type PriceHistory {
    id: Int
    price: Float
    amazonPrice: Float
    ebayPrice: Float
    date: String
}

# Component
type Component {
    id: Int
    description: String
    image: String
    name: String
    type: String
    price: Float
    amazon_price: Float
    ebay_price: Float
    sellerName: String
    userNick: String
    priceHistory: [PriceHistory]
}

input ComponentDTO {
    name: String
    description: String
    image: String
    image64: String
    type: String
    price: Float
    amazon_price: Float
    ebay_price: Float
    sellerName: String
}