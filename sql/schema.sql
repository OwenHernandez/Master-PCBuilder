DROP DATABASE IF EXISTS MASTER;
CREATE DATABASE MASTER;
USE MASTER;

DROP TABLE IF EXISTS BUILDS_COMPONENTS;
DROP TABLE IF EXISTS POSTS;
DROP TABLE IF EXISTS COMPONENTS;
DROP TABLE IF EXISTS SELLERS;
DROP TABLE IF EXISTS BUILDS;
DROP TABLE IF EXISTS USERS;

CREATE TABLE USERS(
    ID INT AUTO_INCREMENT,
    NICK VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    PICTURE VARCHAR(255),
    ACTIVE TINYINT DEFAULT 0,
    HASH VARCHAR(255) NOT NULL,
    FRIEND_ID INT DEFAULT NULL,

    CONSTRAINT PK_USER PRIMARY KEY(ID),
    CONSTRAINT UQ_NICK_USER UNIQUE(NICK),
    CONSTRAINT UQ_EMAIL_USER UNIQUE(EMAIL),
    CONSTRAINT FK_FRIEND_USER FOREIGN KEY(FRIEND_ID) REFERENCES USERS(ID)
);

CREATE TABLE BUILDS(
    ID INT AUTO_INCREMENT,
    NAME VARCHAR(20) DEFAULT "nameless",
    NOTES VARCHAR(255),
    TOTAL_PRICE DECIMAL(10,2) NOT NULL,
    USER_ID INT NOT NULL,

    CONSTRAINT PK_BUILD PRIMARY KEY(ID),
    CONSTRAINT FK_USER_BUILD FOREIGN KEY(USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE POSTS(
    ID INT AUTO_INCREMENT,
    TITLE VARCHAR(50) NOT NULL,
    IMAGE VARCHAR(255),
    DESCRIPTION VARCHAR(100),
    BUILD_ID INT NOT NULL,
    USER_ID INT NOT NULL,

    CONSTRAINT PK_POST PRIMARY KEY(ID),
    CONSTRAINT FK_BUILD_POST FOREIGN KEY(BUILD_ID) REFERENCES BUILDS(ID),
    CONSTRAINT FK_USER_POST FOREIGN KEY(USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE SELLERS(
    ID INT AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    IMAGE VARCHAR(255),

    CONSTRAINT PK_SELLERS PRIMARY KEY(ID),
    CONSTRAINT UQ_NAME_SELLER UNIQUE(NAME)
);

CREATE TABLE COMPONENTS(
    ID INT AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    IMAGE VARCHAR(255),
    DESCRIPTION VARCHAR(100),
    PRICE DECIMAL(10,2) NOT NULL,
    SELLER_ID INT NOT NULL,

    CONSTRAINT PK_COMPONENTS PRIMARY KEY(ID),
    CONSTRAINT FK_SELLER_COMPONENT FOREIGN KEY(SELLER_ID) REFERENCES SELLERS(ID)
);

CREATE TABLE BUILDS_COMPONENTS(
    ID INT AUTO_INCREMENT,
    BUILD_ID INT NOT NULL,
    COMPONENT_ID INT NOT NULL,
    PRICE_AT_THE_TIME DECIMAL(10,2) NOT NULL,
    DATE_CREATED DATE NOT NULL,

    CONSTRAINT PK_BUILD_COMPONENT PRIMARY KEY(ID),
    CONSTRAINT FK_BUILD_BUILD_COMPONENT FOREIGN KEY(BUILD_ID) REFERENCES BUILDS(ID),
    CONSTRAINT FK_COMPONENT_BUILD_COMPONENT FOREIGN KEY(COMPONENT_ID) REFERENCES COMPONENTS(ID)
);